<?php

namespace Database\Seeders;

use App\Models\FieldOfAction;
use App\Models\StrategicDocuments\Institution;
use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class MappingFieldOfActionsInstitutionsSeeder extends Seeder
{
    /**
     * Run the database seeds.
     *
     * @return void
     */
    public function run()
    {
        $data = [
            'Министерство на икономиката и индустрията' => [
                'Бизнес среда',
                'Защита на потребителите'
            ],
            'Министерство на иновациите и растежа' => [
                'Бизнес среда',
                'Междусекторни политики',
                'Наука и технологии'
            ],
            'Български институт по метрология' => [
                'Бизнес среда',
                'Защита на потребителите'
            ],
            'Патентно ведомство' => [
                'Бизнес среда',
                'Наука и технологии'
            ],
            'Агенция за публичните предприятия и контрол' => [
                'Бизнес среда'
            ],
            'Комисия за защита на конкуренцията' => [
                'Бизнес среда'
            ],
            'Държавна агенция "Разузнаване"' => [
                'Външна политика, сигурност и отбрана'
            ],
            'Министерство на външните работи' => [
                'Външна политика, сигурност и отбрана'
            ],
            'Министерство на отбраната' => [
                'Външна политика, сигурност и отбрана'
            ],
            'Държавна агенция "Технически операции"' => [
                'Външна политика, сигурност и отбрана'
            ],
            'Държавна агенция "Държавен резерв и военновременни запаси"' => [
                'Външна политика, сигурност и отбрана'
            ],
            'Държавна агенция "Национална сигурност"' => [
                'Външна политика, сигурност и отбрана'
            ],
            'Национална служба за охрана' => [
                'Външна политика, сигурност и отбрана'
            ],
            'Министерство на електронното управление' => [
                'Държавна администрация'
            ],
            'Национален статистически институт' => [
                'Държавна администрация'
            ],
            'Комисия за регулиране на съобщенията' => [
                'Държавна администрация'
            ],
            'Държавна агенция "Архиви"' => [
                'Държавна администрация'
            ],
            'Министерски съвет и неговата администрация' => [
                'Държавна администрация',
                'Междусекторни политики'
            ],
            'Държавна комисия по сигурността на информацията' => [
                'Държавна администрация'
            ],
            'Министерство на енергетиката' => [
                'Енергетика'
            ],
            'Агенция за ядрено регулиране' => [
                'Енергетика'
            ],
            'Комисия за енергийно и водно регулиране' => [
                'Енергетика',
                'Защита на потребителите'
            ],
            'Национален съвет по цени и реимбурсиране на лекарствените продукти' => [
                'Здравеопазване'
            ],
            'Министерство на здравеопазването' => [
                'Здравеопазване'
            ],
            'Министерство на земеделието и храните' => [
                'Земеделие и селски райони',
                'Качество и безопасност на храните'
            ],
            'Министерство на културата' => [
                'Култура'
            ],
            'Министерство на финансите' => [
                'Междусекторни политики',
                'Финанси и данъчна политика'
            ],
            'Министерство на регионалното развитие и благоустройството' => [
                'Междусекторни политики',
                'Регионална политика'
            ],
            'Министерство на младежта и спорта' => [
                'Младежка политика',
                'Спорт'
            ],
            'Министерство на образованието и науката' => [
                'Образование',
                'Наука и технологии'
            ],
            'Министерство на транспорта и съобщенията' => [
                'Наука и технологии',
                'Транспорт'
            ],
            'Министерство на околната среда и водите' => [
                'Околна среда'
            ],
            'Държавна агенция за бежанците' => [
                'Правосъдие и вътрешни работи'
            ],
            'Министерство на вътрешните работи' => [
                'Правосъдие и вътрешни работи'
            ],
            'Комисия за защита на личните данни' => [
                'Правосъдие и вътрешни работи'
            ],
            'Министерство на правосъдието' => [
                'Правосъдие и вътрешни работи'
            ],
            'Министерство на труда и социалната политика' => [
                'Социална политика и заетост'
            ],
            'Държавна агенция за закрила на детето' => [
                'Социална политика и заетост'
            ],
            'Държавна агенция "Безопасност на движението по пътищата"' => [
                'Транспорт'
            ],
            'Министерство на туризма' => [
                'Туризъм'
            ],
            'Комисия за публичен надзор над регистрираните одитори' => [
                'Финанси и данъчна политика'
            ],
            'Комисия за финансов надзор' => [
                'Финанси и данъчна политика'
            ]
        ];

        if(Institution::get()->count() && FieldOfAction::get()->count() && sizeof($data)){
            foreach ($data as $institutionName => $fieldOfActions){
                $institution = Institution::whereHas('translation', function ($q) use ($institutionName){
                    $q->where('name', '=', $institutionName)
                        ->where('locale', '=', 'bg');
                })->get()->first();

                if($institution){
                    $foa = FieldOfAction::whereHas('translation', function ($q) use ($fieldOfActions){
                        $q->whereIn('name', $fieldOfActions)
                            ->where('locale', '=', 'bg');
                    })->get()->pluck('id')->toArray();
                    $institution->fieldsOfAction()->sync($foa);
                }
            }
        }
    }
}
